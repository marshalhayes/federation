{
  "PlayerName": {
    "_xpath": "//font/b/text()",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "[0-9]+: (.*)"
      },
      "HtmlDecodeTransformation",
      "RemoveExtraWhitespaceTransformation",
      "TrimTransformation"
    ]
  },
  "PlayerId": {
    "_xpath": "//font/b/text()",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "([0-9]+): .*"
      }
    ]
  },
  "RegularRating": {
    "_xpath": "//tr[td[normalize-space()='Regular Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "QuickRating": {
    "_xpath": "//tr[td[normalize-space()='Quick Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "BlitzRating": {
    "_xpath": "//tr[td[normalize-space()='Blitz Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "OnlineRegularRating": {
    "_xpath": "//tr[td[normalize-space()='Online-Regular Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "OnlineQuickRating": {
    "_xpath": "//tr[td[normalize-space()='Online-Quick Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "OnlineBlitzRating": {
    "_xpath": "//tr[td[normalize-space()='Online-Blitz Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "CorrespondenceRating": {
    "_xpath": "//tr[td[normalize-space()='Correspondence Rating']]/td[2][normalize-space(.)]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^[\\s]*[\\(]*([a-zA-Z0-9]+)[\\)]*[\\s]*"
      }
    ]
  },
  "State": {
    "_xpath": "//tr[td[normalize-space()='State']]/td[2]",
    "_transformations": [
      "HtmlDecodeTransformation",
      "RemoveExtraWhitespaceTransformation",
      "TrimTransformation"
    ]
  },
  "Gender": {
    "_xpath": "//tr[td[normalize-space()='Gender']]/td[2]",
    "_transformations": [
      "HtmlDecodeTransformation",
      "RemoveExtraWhitespaceTransformation",
      "TrimTransformation"
    ]
  },
  "ExpiresOn": {
    "_xpath": "//tr[td[normalize-space()='Expiration Dt.']]/td[2]",
    "_transformations": [
      "RemoveExtraWhitespaceTransformation",
      "TrimTransformation",
      {
        "_type": "ParseDateTransformation",
        "_format": "yyyy-MM-dd"
      }
    ]
  },
  "LastChangeDate": {
    "_xpath": "//tr[td[normalize-space()='Last Change Dt.']]/td[2]",
    "_transformations": [
      "RemoveExtraWhitespaceTransformation",
      "TrimTransformation",
      {
        "_type": "ParseDateTransformation",
        "_format": "yyyy-MM-dd"
      }
    ]
  },
  "OverallRanking": {
    "_xpath": "//tr[td[normalize-space()='Overall Ranking']]/td[2]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^(\\d+)"
      }
    ]
  },
  "OverallRankingOutOf": {
    "_xpath": "//tr[td[normalize-space()='Overall Ranking']]/td[2]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "(\\d+)$"
      }
    ]
  },
  "StateRanking": {
    "_xpath": "//tr[td[contains(., 'State Ranking')]]/td[2]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "^(\\d+)"
      }
    ]
  },
  "StateRankingOutOf": {
    "_xpath": "//tr[td[contains(., 'State Ranking')]]/td[2]",
    "_transformations": [
      {
        "_type": "RegexTransformation",
        "_regex": "(\\d+)$"
      }
    ]
  }
}